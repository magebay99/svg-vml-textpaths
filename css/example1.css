/**********************************************
 * Note that I don't use the SVG or VML node
 * names in my CSS.  I try to style the common
 * elements by using IDs on the similar nodes.
 ***********************************************/


/* 
 * This rule is for the root of the SVG and VML 
 * (i.e. the whole shape).
 */
#myShape {
  width: 407px;
  height: 407px;
  cursor: pointer;

  /* SVG */
 
  /*
   * Webkit is the only browser that makes the transform 
   * origin 0 0 (WHY?!?!). We also can't use 50% 50%, 
   * because for SVG Webkit  doesn't understand that 
   * either (WHY!??!)
   */
  -webkit-transform-origin: 203.5px 203.5px;
  
  
  /*
   * Even though it doesn't really do anything, 
   * we do -webkit-transform here. The translateZ(0)
   * turns on GPU acceleration for animation on the
   * node (if available).  I put the rotate(0deg)
   * here as since we need to have the same tranform
   * functions for all the animation states, otherwise
   * the transition will fail.
   */ 
  -webkit-transform: translateZ(0) rotate(0deg);
          
  
  /* 
   * We animate on hover for browsers that do CSS transitions.
   * The 
   */
       -o-transition: -o-transform 1s ease-out;
  -webkit-transition: -webkit-transform 1s ease-out;
          transition: transform 1s ease-out;
  
  /* 
   * VML: a rotation in VML is surprisingly simple, and
   * doesn't need the horrible Matrix filter notation (yay!) 
   */
  rotation: 0;
  
  /* 
   * This is needed by the VML in IE < 8 in order to grab
   * the mouseover events that do the animation in JavaScript
   */
  background: url('../images/transparent.gif');
  
}

/* IE9 will put the curve underneath the cookie unless we
 * set positioning to the <SVG> tag.  We don't do this in 
 * VML since positioning a <v:group> will mess up layout.
 */
svg#myShape {
  position: relative;
}

/*
 * This rule is to style the text (i.e. the <text> node in SVG
 * and the <v:shape> node in VML).
 */
#myText {

  font-size: 25px;
  
  /* SVG only.  For VML, the fill happens in the <v:shape> tag. */
  fill: black;
  
  /* Note: VML will not accept @font-face fonts (!!!) */
  font-family: "Palatino Linotype", "Book Antiqua3", "Palatino", serif;
  font-style: italic;
}




/*
 * On hover, we want the shape animate in a full circle.
 * Note we don't bother with -ms-transform since this 
 * is going to be handled by JavaScript, due to IE9's
 * support of CSS transitions (IE10, which does support
 * transitions, doesn't use the -ms vendor prefix with
 * either transforms or transitions).
 */
#myShape:hover {
       -o-transform: rotate(360deg);
  -webkit-transform: translateZ(0) rotate(360deg);
          transform: translateZ(0) rotate(360deg);
  
  /* 
   * You would think this would work, but it doesn't,
   * even without the transition. (I leave it here for 
   * to call this fact out).   Seems like we can't 
   * rotate in VML on hover, so we do this with 
   * JavaScript instead via the mouseover
   * event.
   */
  rotation: 45;
}

#cookie {
  left: -4px;
  position: absolute;
  top: 0;
}

#exampleContent {
  height: 600px;
}
